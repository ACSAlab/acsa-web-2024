<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Publications on ACSA Lab</title>
    <link>https://acsalab.github.io/acsa-web-2024/publications/</link>
    <description>Recent content in Publications on ACSA Lab</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://acsalab.github.io/acsa-web-2024/publications/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2.5 Million-Atom Ab Initio Electronic-Structure Simulation of Complex Metallic Heterostructures with DGDFT</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2022/sc22-million-atom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2022/sc22-million-atom/</guid>
      <description></description>
    </item>
    <item>
      <title>A Novel U-Like Network for the Segmentation of Thoracic Organs</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2020/isbi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2020/isbi/</guid>
      <description></description>
    </item>
    <item>
      <title>A3PIM: An Automated, Analytic and Accurate Processing-in-Memory Offloader</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2024/date-a3pim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2024/date-a3pim/</guid>
      <description>&lt;p&gt;The performance gap between memory and proces-&#xA;sor has grown rapidly. Consequently, the energy and wall-clock&#xA;time costs associated with moving data between the CPU and&#xA;main memory predominate the overall computational cost. The&#xA;Processing-in-Memory (PIM) paradigm emerges as a promising&#xA;architecture that mitigates the need for extensive data movements&#xA;by strategically positioning computing units proximate to the&#xA;memory. Despite the abundant efforts devoted to building a&#xA;robust and highly-available PIM system, identifying PIM-friendly&#xA;segments of applications poses significant challenges due to the&#xA;lack of a comprehensive tool to evaluate the intrinsic memory&#xA;access pattern of the segment.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Accelerating Parallel First-Principles Excited-State Calculation by Low-Rank Approximation with K-Means Clustering</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2022/icpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2022/icpp/</guid>
      <description></description>
    </item>
    <item>
      <title>AI for Quantum Mechanics: High Performance Quantum Many-Body Simulations via Deep Learning</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2022/sc22-aiquantum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2022/sc22-aiquantum/</guid>
      <description></description>
    </item>
    <item>
      <title>An Efficient Multi-GPU Implementation for Linear-Response Time-Dependent Density Functional Theory</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2020/hpcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2020/hpcc/</guid>
      <description></description>
    </item>
    <item>
      <title>Automatic Segmentation of Target Structures for Total Marrow and Lymphoid Irradiation in Bone Marrow Transplantation</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2022/embc-autoseg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2022/embc-autoseg/</guid>
      <description></description>
    </item>
    <item>
      <title>Contrast Learning Based Robust Framework for Weakly Supervised Medical Image Segmentation with Coarse Bounding Box Annotations</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2023/miccai-cmmca/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2023/miccai-cmmca/</guid>
      <description></description>
    </item>
    <item>
      <title>DARNet: Dual-Attention Residual Network for Automatic Diagnosis of COVID-19 via CT Images</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2021/bibm-darnet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2021/bibm-darnet/</guid>
      <description></description>
    </item>
    <item>
      <title>Establishing a Modeling System in 3-km Horizontal Resolution for Global Atmospheric Circulation triggered by Submarine Volcanic Eruptions with 400 Billion Smoothed Particle Hydrodynamics</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2023/sc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2023/sc/</guid>
      <description></description>
    </item>
    <item>
      <title>FcTC-UNet: Fine-grained Combination of Transformer and CNN for Thoracic Organs Segmentation</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2022/embc-fctc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2022/embc-fctc/</guid>
      <description></description>
    </item>
    <item>
      <title>FRNET: An Effective Hybrid Structure for Automatic Segmentation of Head and Neck Primary Tumors from Multimodal Images</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2023/isbi-frnet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2023/isbi-frnet/</guid>
      <description></description>
    </item>
    <item>
      <title>H-DenseFormer: An Efficient Hybrid Densely Connected Transformer for Multimodal Tumor Segmentation</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2023/miccai-hdenseformer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2023/miccai-hdenseformer/</guid>
      <description></description>
    </item>
    <item>
      <title>Quantifying Throughput of Basic Blocks on ARM Microarchitectures by Static Code Analyzers: A Case Study on Kunpeng 920</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2022/hpcc22-sca/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2022/hpcc22-sca/</guid>
      <description>&lt;p&gt;The performance of high-performance computing (HPC) and other real-world applications is becoming unpre-dictable as the micro-architecture of the modern central processing unit (CPU) turns to be more and more complex. As a consequence, predicting the execution time of a code snippet is notoriously difficult. Basic block throughput predictor, also known as static code analyzer, provides a ubiquitous way to predict the execution time of a basic block, which includes assembly code segments without jump-related instructions. In this article, we build a workflow to faithfully run, collect and analyze basic blocks from real-world applications. Several static code analyzers are introduced, compared and optimized to show which one performs better on accuracy and other metrics on Kunpeng 920 processor. Under extensive experiments, we achieve state-of-the-art 86.7% accuracy in predicting the throughput of all basic â€¦&lt;/p&gt;</description>
    </item>
    <item>
      <title>RDMA-Based Apache Storm for High-Performance Stream Data Processing</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2021/ijpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2021/ijpp/</guid>
      <description></description>
    </item>
    <item>
      <title>Rethinking Automatic Segmentation of Gross Target Volume from a Decoupling Perspective</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2023/cmig-autoseg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2023/cmig-autoseg/</guid>
      <description></description>
    </item>
    <item>
      <title>Simultaneous Right Ventricle End-diastolic and End-systolic Frame Identification and Landmark Detection on Echocardiography</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2021/embc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2021/embc/</guid>
      <description></description>
    </item>
    <item>
      <title>SWSPH: A Massively Parallel SPH Implementation for Hundred-Billion-Particle Simulation on New Sunway Supercomputer</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2023/euro-par/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2023/euro-par/</guid>
      <description></description>
    </item>
    <item>
      <title>Uncovering the performance bottleneck of modern HPC processor with static code analyzer: a case study on Kunpeng 920</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2023/thpc-sca/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2023/thpc-sca/</guid>
      <description>&lt;p&gt;The performance gap between memory and proces-&#xA;sor has grown rapidly. Consequently, the energy and wall-clock&#xA;time costs associated with moving data between the CPU and&#xA;main memory predominate the overall computational cost. The&#xA;Processing-in-Memory (PIM) paradigm emerges as a promising&#xA;architecture that mitigates the need for extensive data movements&#xA;by strategically positioning computing units proximate to the&#xA;memory. Despite the abundant efforts devoted to building a&#xA;robust and highly-available PIM system, identifying PIM-friendly&#xA;segments of applications poses significant challenges due to the&#xA;lack of a comprehensive tool to evaluate the intrinsic memory&#xA;access pattern of the segment.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Whole Slide Image Multi-Classification of Cervical Epithelial Lesions Based on Unsupervised Pre-training</title>
      <link>https://acsalab.github.io/acsa-web-2024/publications/2022/embc-whole/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://acsalab.github.io/acsa-web-2024/publications/2022/embc-whole/</guid>
      <description></description>
    </item>
  </channel>
</rss>
